{
    "tests": [
        {
            "score": 25.0,
            "max_score": 25.0,
            "name": "test_uniq.py::test_file1[everything-else]",
            "output": "\n",
            "visibility": "visible"
        },
        {
            "score": 25.0,
            "max_score": 25.0,
            "name": "test_uniq.py::test_file2[everything-else]",
            "output": "\n",
            "visibility": "visible"
        },
        {
            "score": 0.9586,
            "max_score": 25.0,
            "name": "test_uniq.py::test_stdin1[everything-else]",
            "output": "\ngroup_name = 'everything-else'\n\n    def new_func(group_name):\n        group_stat = group_stats[group_name]\n        if not group_stat['passed']:\n>           assert group_stat['observed'] == group_stat['expected']\nE           assert \"terminate called after throwing an instance of 'std::logic_error'\\n  what():  basic_string::_M_construct null not valid\\n\" == 'kernel\\nfirewall\\nmalware\\ngigabyte\\nroot access\\ncloud computing\\nnetwork\\njpeg\\njpeg\\nhtml\\nmalware\\nfirewall\\ncache\\njpeg\\nfirewall\\nnetwork\\nfirewall\\nroot access\\nprotocol\\ncloud computing\\nkernel\\ncache\\nkernel\\nroot access\\nprotocol\\nhtml\\nquery\\ngigabyte\\nhtml\\nprotocol\\njpeg\\nroot access\\nhtml\\ngigabyte\\nhtml\\njpeg\\njpeg\\nroot access\\nfirewall\\nmalware\\nkernel\\nprotocol\\nquery\\ncloud computing\\nnetwork\\nmalware\\ncache\\nprotocol\\nobject-oriented programming\\nroot access\\ngigabyte\\nquery\\nnetwork\\nprotocol\\ndata mining\\nnetwork\\nprotocol\\ncache\\ncache\\nquery\\nquery\\nobject-oriented programming\\njpeg\\nnetwork\\ngigabyte\\nquery\\nfirewall\\nprotocol\\njpeg\\nmalware\\nprotocol\\nnetwork\\nmalware\\nfirewall\\nmalware\\ngigabyte\\nhtml\\nobject-oriented programming\\nmalware\\nalgorithm\\ncache\\nnetwork\\nkernel\\nkernel\\nroot access\\ngigabyte\\nkernel\\nkernel\\ngigabyte\\nnetwork\\ncache\\nmalware\\nhtml\\nfirewall\\nfirewall\\nquery\\nalgorithm\\nkernel\\nfirewall\\nmalware\\ngigabyte\\nroot access\\ncloud computing\\nnetwork\\njpeg\\nhtml\\ncache\\nprotocol\\nquery\\nobject-oriented programming\\ndata mining\\nalgorithm\\n'\nE             + terminate called after throwing an instance of 'std::logic_error'\nE             +   what():  basic_string::_M_construct null not valid\nE             - kernel\nE             - firewall\nE             - malware\nE             - gigabyte\nE             - root access\nE             - cloud computing\nE             - network\nE             - jpeg\nE             - jpeg\nE             - html\nE             - malware\nE             - firewall\nE             - cache\nE             - jpeg\nE             - firewall\nE             - network\nE             - firewall\nE             - root access\nE             - protocol\nE             - cloud computing\nE             - kernel\nE             - cache\nE             - kernel\nE             - root access\nE             - protocol\nE             - html\nE             - query\nE             - gigabyte\nE             - html\nE             - protocol\nE             - jpeg\nE             - root access\nE             - html\nE             - gigabyte\nE             - html\nE             - jpeg\nE             - jpeg\nE             - root access\nE             - firewall\nE             - malware\nE             - kernel\nE             - protocol\nE             - query\nE             - cloud computing\nE             - network\nE             - malware\nE             - cache\nE             - protocol\nE             - object-oriented programming\nE             - root access\nE             - gigabyte\nE             - query\nE             - network\nE             - protocol\nE             - data mining\nE             - network\nE             - protocol\nE             - cache\nE             - cache\nE             - query\nE             - query\nE             - object-oriented programming\nE             - jpeg\nE             - network\nE             - gigabyte\nE             - query\nE             - firewall\nE             - protocol\nE             - jpeg\nE             - malware\nE             - protocol\nE             - network\nE             - malware\nE             - firewall\nE             - malware\nE             - gigabyte\nE             - html\nE             - object-oriented programming\nE             - malware\nE             - algorithm\nE             - cache\nE             - network\nE             - kernel\nE             - kernel\nE             - root access\nE             - gigabyte\nE             - kernel\nE             - kernel\nE             - gigabyte\nE             - network\nE             - cache\nE             - malware\nE             - html\nE             - firewall\nE             - firewall\nE             - query\nE             - algorithm\nE             - kernel\nE             - firewall\nE             - malware\nE             - gigabyte\nE             - root access\nE             - cloud computing\nE             - network\nE             - jpeg\nE             - html\nE             - cache\nE             - protocol\nE             - query\nE             - object-oriented programming\nE             - data mining\nE             - algorithm\n\n/home/kris10d/.local/lib/python3.10/site-packages/byu_pytest_utils/dialog.py:31: AssertionError",
            "visibility": "visible"
        },
        {
            "score": 1.0646,
            "max_score": 25.0,
            "name": "test_uniq.py::test_stdin2[everything-else]",
            "output": "\ngroup_name = 'everything-else'\n\n    def new_func(group_name):\n        group_stat = group_stats[group_name]\n        if not group_stat['passed']:\n>           assert group_stat['observed'] == group_stat['expected']\nE           assert \"terminate called after throwing an instance of 'std::logic_error'\\n  what():  basic_string::_M_construct null not valid\\n\" == 'Johnson\\nHernandez\\nDavis\\nGarcia\\nThomas\\nGarcia\\nDavis\\nDavis\\nDavis\\nSmith\\nBrown\\nMiller\\nSmith\\nGarcia\\nSmith\\nHernandez\\nJones\\nJohnson\\nBrown\\nMiller\\nRodriguez\\nSmith\\nMartinez\\nAnderson\\nRodriguez\\nSmith\\nSmith\\nMartinez\\nGarcia\\nSmith\\nDavis\\nAnderson\\nAnderson\\nThomas\\nRodriguez\\nWilliams\\nDavis\\nMartinez\\nJohnson\\nMartinez\\nWilliams\\nJohnson\\nMartinez\\nBrown\\nThomas\\nBrown\\nSmith\\nSmith\\nMoore\\nJones\\nMoore\\nGarcia\\nThomas\\nDavis\\nThomas\\nJohnson\\nDavis\\nWilliams\\nThomas\\nWilson\\nRodriguez\\nBrown\\nDavis\\nJohnson\\nRodriguez\\nMoore\\nMoore\\nThomas\\nRodriguez\\nDavis\\nRodriguez\\nThomas\\nBrown\\nSmith\\nGarcia\\nMiller\\nJones\\nMiller\\nJohnson\\nHernandez\\nDavis\\nGarcia\\nThomas\\nSmith\\nBrown\\nMiller\\nJones\\nRodriguez\\nMartinez\\nAnderson\\nWilliams\\nMoore\\nWilson\\n'\nE             + terminate called after throwing an instance of 'std::logic_error'\nE             +   what():  basic_string::_M_construct null not valid\nE             - Johnson\nE             - Hernandez\nE             - Davis\nE             - Garcia\nE             - Thomas\nE             - Garcia\nE             - Davis\nE             - Davis\nE             - Davis\nE             - Smith\nE             - Brown\nE             - Miller\nE             - Smith\nE             - Garcia\nE             - Smith\nE             - Hernandez\nE             - Jones\nE             - Johnson\nE             - Brown\nE             - Miller\nE             - Rodriguez\nE             - Smith\nE             - Martinez\nE             - Anderson\nE             - Rodriguez\nE             - Smith\nE             - Smith\nE             - Martinez\nE             - Garcia\nE             - Smith\nE             - Davis\nE             - Anderson\nE             - Anderson\nE             - Thomas\nE             - Rodriguez\nE             - Williams\nE             - Davis\nE             - Martinez\nE             - Johnson\nE             - Martinez\nE             - Williams\nE             - Johnson\nE             - Martinez\nE             - Brown\nE             - Thomas\nE             - Brown\nE             - Smith\nE             - Smith\nE             - Moore\nE             - Jones\nE             - Moore\nE             - Garcia\nE             - Thomas\nE             - Davis\nE             - Thomas\nE             - Johnson\nE             - Davis\nE             - Williams\nE             - Thomas\nE             - Wilson\nE             - Rodriguez\nE             - Brown\nE             - Davis\nE             - Johnson\nE             - Rodriguez\nE             - Moore\nE             - Moore\nE             - Thomas\nE             - Rodriguez\nE             - Davis\nE             - Rodriguez\nE             - Thomas\nE             - Brown\nE             - Smith\nE             - Garcia\nE             - Miller\nE             - Jones\nE             - Miller\nE             - Johnson\nE             - Hernandez\nE             - Davis\nE             - Garcia\nE             - Thomas\nE             - Smith\nE             - Brown\nE             - Miller\nE             - Jones\nE             - Rodriguez\nE             - Martinez\nE             - Anderson\nE             - Williams\nE             - Moore\nE             - Wilson\n\n/home/kris10d/.local/lib/python3.10/site-packages/byu_pytest_utils/dialog.py:31: AssertionError",
            "visibility": "visible"
        }
    ]
}